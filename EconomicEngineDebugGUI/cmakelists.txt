cmake_minimum_required(VERSION 3.2)

project(EconomicEngineDebugGUI VERSION 1.0.0 LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

if(WIN32)
    set(QT_VERSION "5.15.2")
    set(CMAKE_PREFIX_PATH D:/Qt/${QT_VERSION}/msvc2019_64)
endif(WIN32)

find_package(Qt5 ${QT_VERSION} COMPONENTS
    Core 
    Widgets 
    Gui
    PrintSupport
    REQUIRED
)

set(HEADER_DIR ${CMAKE_CURRENT_SOURCE_DIR}/includes)
set(SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)

set(HEADERS
    ${HEADER_DIR}/JobManager.h
    ${HEADER_DIR}/GraphManager.h
    ${HEADER_DIR}/EconomicEngineDebugGUI.ui
    ${HEADER_DIR}/EconomicEngineDebugGUI.h
    ${HEADER_DIR}/qcustomplot.h
)

set(SOURCES
    ${SOURCE_DIR}/JobManager.cpp
    ${SOURCE_DIR}/GraphManager.cpp
    ${SOURCE_DIR}/EconomicEngineDebugGUI.cpp
    ${SOURCE_DIR}/EconomicEngineDebugGUI.qrc
    ${SOURCE_DIR}/qcustomplot.cpp
)

#=======================================
#Exe target (standalone mode)
add_executable(${PROJECT_NAME} ${SOURCES} ${HEADERS} ${SOURCE_DIR}/main.cpp)

target_include_directories(${PROJECT_NAME}
	PUBLIC
		${HEADER_DIR}
)

target_link_libraries(${PROJECT_NAME}
    PUBLIC
        ${Qt5Widgets_LIBRARIES}
        Qt5::Core
        Qt5::Widgets
        Qt5::Gui
        Qt5::PrintSupport
		EconomicEngine
)

target_compile_definitions(${PROJECT_NAME}
    PUBLIC
        ${Qt5Widgets_DEFINITIONS}
        STANDALONE_MODE
)

#Move QT dlls to output dir
if(WIN32)
    add_custom_command(
        TARGET ${PROJECT_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
            $<TARGET_FILE:Qt5::Widgets>
            $<TARGET_FILE:Qt5::Core>
            $<TARGET_FILE:Qt5::Gui>
            $<TARGET_FILE:Qt5::PrintSupport>
            $<TARGET_FILE_DIR:${PROJECT_NAME}>
    )

    add_custom_command(
        TARGET ${PROJECT_NAME} POST_BUILD 
        COMMAND ${CMAKE_COMMAND} -E make_directory
        $<TARGET_FILE_DIR:${PROJECT_NAME}>/platforms
    )

    add_custom_command(
        TARGET ${PROJECT_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
            $<TARGET_FILE:Qt5::QWindowsIntegrationPlugin>
            $<TARGET_FILE_DIR:${PROJECT_NAME}>/platforms/
    )

   set_target_properties(${PROJECT_NAME} 
                            PROPERTIES 
                            LINK_FLAGS_DEBUG "/SUBSYSTEM:CONSOLE"
                            COMPILE_DEFINITIONS_DEBUG "_CONSOLE"
                            LINK_FLAGS_RELWITHDEBINFO "/SUBSYSTEM:CONSOLE"
                            COMPILE_DEFINITIONS_RELWITHDEBINFO "_CONSOLE"
                            LINK_FLAGS_RELEASE "/SUBSYSTEM:WINDOWS"
                            LINK_FLAGS_MINSIZEREL "/SUBSYSTEM:WINDOWS"
   )
endif(WIN32)

#Move assets to build dir
add_custom_command(
    TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    ${CMAKE_SOURCE_DIR}/Content ${CMAKE_CURRENT_BINARY_DIR}/Content
)

#Move assets to output dir
add_custom_command(
    TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    ${CMAKE_SOURCE_DIR}/Content $<TARGET_FILE_DIR:${PROJECT_NAME}>/Content
)

#=======================================
#Lib target (to be used by SFML project)
add_library(${PROJECT_NAME}_lib ${SOURCES} ${HEADERS})

get_target_property(ECONOMIC_ENGINE_BINARY_DIR EconomicEngineGraphics BINARY_DIR)

set_target_properties(${PROJECT_NAME}_lib
    PROPERTIES 
        AUTOGEN_BUILD_DIR ${ECONOMIC_ENGINE_BINARY_DIR}/EconomicEngineGraphics_autogen
        ARCHIVE_OUTPUT_DIRECTORY  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}_lib
)

get_target_property(ECONOMIC_ENGINE_HEADER_DIR EconomicEngineGraphics INCLUDE_DIRECTORIES)

target_include_directories(${PROJECT_NAME}_lib
	PUBLIC
		${HEADER_DIR}
        ${ECONOMIC_ENGINE_HEADER_DIR}
)

target_link_libraries(${PROJECT_NAME}_lib
    PUBLIC
        ${Qt5Widgets_LIBRARIES}
        Qt5::Core
        Qt5::Widgets
        Qt5::Gui
        Qt5::PrintSupport
		EconomicEngine
)

target_compile_definitions(${PROJECT_NAME}_lib
    PUBLIC
        ${Qt5Widgets_DEFINITIONS}
)
